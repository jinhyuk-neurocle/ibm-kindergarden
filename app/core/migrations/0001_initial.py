# Generated by Django 2.2.12 on 2020-06-07 09:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=2048, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('login_ip', models.CharField(max_length=255, null=True)),
                ('verification_code', models.CharField(max_length=16, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CentroidTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressX', models.FloatField(default=0.0)),
                ('addressY', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('meeting_date', models.DateTimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('member', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=1024)),
                ('parentName', models.CharField(max_length=32)),
                ('parentBirthDate', models.DateField()),
                ('parentGender', models.CharField(max_length=8)),
                ('phone', models.CharField(max_length=32)),
                ('childName', models.CharField(max_length=32)),
                ('childGender', models.CharField(max_length=8)),
                ('childBirthDate', models.DateField()),
                ('childHeight', models.FloatField()),
                ('childWeight', models.FloatField()),
                ('childDevelopmentAge', models.IntegerField()),
                ('childRemark', models.CharField(max_length=2048)),
                ('addressX', models.FloatField(default=0.0)),
                ('addressY', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.CharField(max_length=512)),
                ('meeting_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.MeetingGroup')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentName', models.CharField(max_length=32)),
                ('parentBirthDate', models.DateField()),
                ('parentGender', models.CharField(max_length=8)),
                ('phone', models.CharField(max_length=32)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CentroidTreeWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_real', models.BooleanField(default=True)),
                ('from_centroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_centroid_id', to='core.CentroidTree')),
                ('to_centroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_centroid_id', to='core.CentroidTree')),
            ],
        ),
        migrations.AddField(
            model_name='centroidtree',
            name='childs',
            field=models.ManyToManyField(through='core.CentroidTreeWeight', to='core.CentroidTree'),
        ),
    ]
